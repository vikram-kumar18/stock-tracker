{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StockService {\n  constructor(http) {\n    this.http = http;\n    this.token = 'bu4f8kn48v6uehqi3cqg';\n  }\n  getFromLocalStorage(key) {\n    return localStorage.getItem(key);\n  }\n  clearStorage() {\n    localStorage.clear();\n  }\n  setToLocalStorage(key, value) {\n    localStorage.setItem(key, value);\n  }\n  getCompanyName(stockName) {\n    return this.http.get('https://finnhub.io/api/v1/search?q=' + stockName + '&token=' + this.token);\n  }\n  getStockQuotedData(stockName) {\n    return this.http.get('https://finnhub.io/api/v1/quote?symbol=' + stockName + '&token=' + this.token);\n  }\n  getStockInsiderSentiment(symbolName) {\n    const todayDate = new Date().toISOString().slice(0, 10);\n    const fromDateFormat = new Date(todayDate);\n    fromDateFormat.setMonth(fromDateFormat.getMonth() - 3);\n    const fromDate = fromDateFormat.toISOString().slice(0, 10);\n    return this.http.get('https://finnhub.io/api/v1/stock/insider-sentiment?symbol=' + symbolName + '&from=' + fromDate + '&to=' + todayDate + '&token=' + this.token);\n  }\n}\nStockService.ɵfac = function StockService_Factory(t) {\n  return new (t || StockService)(i0.ɵɵinject(i1.HttpClient));\n};\nStockService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StockService,\n  factory: StockService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,UAAK,GAAQ,sBAAsB;EACK;EAExCC,mBAAmB,CAACC,GAAW;IAC7B,OAAOC,YAAY,CAACC,OAAO,CAACF,GAAG,CAAC;EAClC;EAEAG,YAAY;IACVF,YAAY,CAACG,KAAK,EAAE;EACtB;EAEAC,iBAAiB,CAACL,GAAW,EAAEM,KAAU;IACvCL,YAAY,CAACM,OAAO,CAACP,GAAG,EAAEM,KAAK,CAAC;EAClC;EAEAE,cAAc,CAACC,SAAgB;IAE7B,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAc,qCAAqC,GAACD,SAAS,GAAG,SAAS,GAAC,IAAI,CAACE,KAAK,CAAC;EAC3G;EAEAC,kBAAkB,CAACH,SAAgB;IAClC,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAY,yCAAyC,GAACD,SAAS,GAAG,SAAS,GAAC,IAAI,CAACE,KAAK,CAAC;EAC5G;EAEAE,wBAAwB,CAACC,UAAiB;IACxC,MAAMC,SAAS,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACvD,MAAMC,cAAc,GAAG,IAAIH,IAAI,CAACD,SAAS,CAAC;IAC1CI,cAAc,CAACC,QAAQ,CAACD,cAAc,CAACE,QAAQ,EAAE,GAAG,CAAC,CAAC;IACtD,MAAMC,QAAQ,GAAGH,cAAc,CAACF,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAE1D,OAAO,IAAI,CAACpB,IAAI,CAACY,GAAG,CAAY,2DAA2D,GAACI,UAAU,GAAE,QAAQ,GAACQ,QAAQ,GAAC,MAAM,GAACP,SAAS,GAAC,SAAS,GAAC,IAAI,CAACJ,KAAK,CAAC;EACjK;;AAhCUf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA2B,SAAZ3B,YAAY;EAAA4B,YAFX;AAAM","names":["StockService","constructor","http","getFromLocalStorage","key","localStorage","getItem","clearStorage","clear","setToLocalStorage","value","setItem","getCompanyName","stockName","get","token","getStockQuotedData","getStockInsiderSentiment","symbolName","todayDate","Date","toISOString","slice","fromDateFormat","setMonth","getMonth","fromDate","factory","providedIn"],"sourceRoot":"","sources":["C:\\vikram\\stock-tracker\\src\\app\\services\\stock.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable, observable} from 'rxjs'\nimport { QuoteData } from '../models/quote-data.model';\nimport { StockSearch } from '../models/stock-search.model';\nimport { Sentiment } from '../models/sentiment.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n  token:string='bu4f8kn48v6uehqi3cqg';\n  constructor(private http: HttpClient) { }\n\n  getFromLocalStorage(key: string) {\n    return localStorage.getItem(key);\n  }\n\n  clearStorage() {\n    localStorage.clear();\n  }\n\n  setToLocalStorage(key: string, value: any) {\n    localStorage.setItem(key, value);\n  }\n\n  getCompanyName(stockName:string): Observable<StockSearch>{\n    \n    return this.http.get<StockSearch>('https://finnhub.io/api/v1/search?q='+stockName + '&token='+this.token);\n  }\n\n  getStockQuotedData(stockName:string): Observable<QuoteData>{\n   return this.http.get<QuoteData>('https://finnhub.io/api/v1/quote?symbol='+stockName + '&token='+this.token);\n  }\n\n  getStockInsiderSentiment(symbolName:string): Observable<Sentiment>{\n    const todayDate = new Date().toISOString().slice(0, 10);\n    const fromDateFormat = new Date(todayDate);\n    fromDateFormat.setMonth(fromDateFormat.getMonth() - 3);\n    const fromDate = fromDateFormat.toISOString().slice(0, 10);\n    \n    return this.http.get<Sentiment>('https://finnhub.io/api/v1/stock/insider-sentiment?symbol='+symbolName+ '&from='+fromDate+'&to='+todayDate+'&token='+this.token);\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}